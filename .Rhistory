require("rgdal") # requires sp, will use proj.4 if installed
require("maptools")
require("ggplot2")
require("plyr")
gpclibPermit()
Counties = readOGR(dsn="Data/", layer="UScounties")
Counties@data$id = rownames(Counties@data)
Counties.points = fortify(Counties, region="id")
Counties.df = join(Counties.points, Counties@data, by="id")
View(Counties.df)
Num1 <- c(5, 7)
Num2 <- 3
cat(Num1, Num2)
remove(Num1, Num2)
Prueba <- subset(Counties.df, Counties.df$group == .01)
View(Counties.df)
Prueba <- subset(Counties.df, Counties.df$group == ".01")
View(Prueba)
View(Counties.df)
Prueba <- subset(Counties.df, Counties.df$group == 0.1)
View(Prueba)
View(Counties.df)
groups <- function(Num){
Coordenadas <- subset(Counties, Counties$group==Num, select=1:2)
Coordenadas1 <- subset(Counties, Counties$group==Num)
Coordenadas <- as.data.frame(t(Coordenadas))
Coordenadas <- toJSON(Coordenadas, .withNames=FALSE)
Coordenadas <- gsub("\n", "", Coordenadas)
Coordenadas <- paste("L.polyline(", Coordenadas, ",{color:'blue'}).addTo(map).bindPopup('<b> group </b><br /> Afluencia 1er Trimestre 2013: <br />"');")
return(Coordenadas)
}
""
"
''
groups <- function(Num){
Coordenadas <- subset(Counties, Counties$group==Num, select=1:2)
Coordenadas1 <- subset(Counties, Counties$group==Num)
Coordenadas <- as.data.frame(t(Coordenadas))
Coordenadas <- toJSON(Coordenadas, .withNames=FALSE)
Coordenadas <- gsub("\n", "", Coordenadas)
Coordenadas <- paste("L.polyline(", Coordenadas, ",{color:'blue'}).addTo(map).bindPopup('<b> group </b><br /> Afluencia 1er Trimestre 2013: <br />');")
return(Coordenadas)
}
groups(0.1)
groups("0.1")
Coordenadas <- subset(Counties, Counties$group==0.1, select=1:2)
groups <- function(Num){
Coordenadas <- subset(Counties.df, Counties.df$group==Num, select=1:2)
Coordenadas1 <- subset(Counties.df, Counties.df$group==Num)
Coordenadas <- as.data.frame(t(Coordenadas))
Coordenadas <- toJSON(Coordenadas, .withNames=FALSE)
Coordenadas <- gsub("\n", "", Coordenadas)
Coordenadas <- paste("L.polyline(", Coordenadas, ",{color:'blue'}).addTo(map).bindPopup('<b> group </b><br /> Afluencia 1er Trimestre 2013: <br />');")
return(Coordenadas)
}
groups(0.1)
require(RJSONIO)
groups <- function(Num){
Coordenadas <- subset(Counties.df, Counties.df$group==Num, select=1:2)
Coordenadas1 <- subset(Counties.df, Counties.df$group==Num)
Coordenadas <- as.data.frame(t(Coordenadas))
Coordenadas <- toJSON(Coordenadas, .withNames=FALSE)
Coordenadas <- gsub("\n", "", Coordenadas)
Coordenadas <- paste("L.polyline(", Coordenadas, ",{color:'blue'}).addTo(map).bindPopup('<b> group </b><br /> Afluencia 1er Trimestre 2013: <br />');")
return(Coordenadas)
}
groups <- function(Num){
Coordenadas <- subset(Counties.df, Counties.df$group==Num, select=1:2)
Coordenadas1 <- subset(Counties.df, Counties.df$group==Num)
Coordenadas <- as.data.frame(t(Coordenadas))
Coordenadas <- toJSON(Coordenadas, .withNames=FALSE)
Coordenadas <- gsub("\n", "", Coordenadas)
Coordenadas <- paste("L.polyline(", Coordenadas, ",{color:'blue'}).addTo(map).bindPopup('<b> group </b><br /> Afluencia 1er Trimestre 2013: <br />');")
return(Coordenadas)
}
groups(0.1)
cat(groups(0.1))
groups <- function(Num){
Coordenadas <- subset(Counties.df, Counties.df$group==Num, select=1:2)
Coordenadas1 <- subset(Counties.df, Counties.df$group==Num)
Coordenadas <- as.data.frame(t(Coordenadas))
Coordenadas <- toJSON(Coordenadas, .withNames=FALSE)
Coordenadas <- gsub("\n", "", Coordenadas)
Coordenadas <- paste("L.polygon(", Coordenadas, ",{color:'blue'}).addTo(map).bindPopup('<b> group </b><br /> Afluencia 1er Trimestre 2013: <br />');")
return(Coordenadas)
}
cat(groups(0.1))
View(Counties.df)
groups <- function(Num){
Coordenadas <- subset(Counties.df, Counties.df$group==Num, select=c(2:1)
Coordenadas1 <- subset(Counties.df, Counties.df$group==Num)
Coordenadas <- as.data.frame(t(Coordenadas))
Coordenadas <- toJSON(Coordenadas, .withNames=FALSE)
Coordenadas <- gsub("\n", "", Coordenadas)
groups <- function(Num){
Coordenadas <- subset(Counties.df, Counties.df$group==Num, select=2:1)
Coordenadas1 <- subset(Counties.df, Counties.df$group==Num)
Coordenadas <- as.data.frame(t(Coordenadas))
Coordenadas <- toJSON(Coordenadas, .withNames=FALSE)
Coordenadas <- gsub("\n", "", Coordenadas)
Coordenadas <- paste("L.polygon(", Coordenadas, ",{color:'blue'}).addTo(map).bindPopup('<b> group </b><br /> Afluencia 1er Trimestre 2013: <br />');")
return(Coordenadas)
}
View(Counties.df)
View(Counties.df)
cat(groups(0.1))
CountiesList <- unique(Counties.df$group)
List <- lapply(CountiesList, groups)
cat(List)
List1 <- List[[1]]
List1
for (i in 2:3269){
tmp <- List[[i]]
List1 <- paste(List1, tmp)
}
cat(List1)
?cat
cat(List1, "~/Desktop/Prueba123.txt")
cat(List1, file="~/Desktop/Prueba123.txt")
List1
cat(List1)
cat(List1)
require("rgdal") # requires sp, will use proj.4 if installed
require("maptools")
require("ggplot2")
require("plyr")
gpclibPermit()
require(RJSONIO)
remove(list=ls())
groups <- function(Num){
Coordenadas <- subset(Counties.df, Counties.df$group==Num, select=2:1)
Coordenadas1 <- subset(Counties.df, Counties.df$group==Num)
County <- paste(Coordenadas1$NAME, Coordenadas1$STATE_NAMES, sep=", ")
Coordenadas <- as.data.frame(t(Coordenadas))
Coordenadas <- toJSON(Coordenadas, .withNames=FALSE)
Coordenadas <- gsub("\n", "", Coordenadas)
Coordenadas <- paste("L.polygon(", Coordenadas, ",{color:'blue'}).addTo(map).bindPopup('<b> ", County ," </b><br /> Precio0 <br />');")
return(Coordenadas)
}
